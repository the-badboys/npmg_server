name: Deploy
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps TCP port 5432 on service container to the host
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/npmg
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm ci
      # run the migration in the test database
      - run: npm run db:push
      - run: npm run test
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only deploy master
    needs: test
    steps:
      - uses: actions/checkout@v2
      - run: npm ci
      - name: Run production migration
        run: npm run migrate:deploy
        env:
          DATABASE_URL: postgres://dbxwqbbvzgvmus:bdc406d1da586b9df23d8b5153c5936b6c04752492b1759a1b33f82bccf0f504@ec2-54-146-73-98.compute-1.amazonaws.com:5432/d1oma4k1pboh15
      - uses: akhileshns/heroku-deploy@v3.4.6
        with:
          heroku_api_key: 64ff7b3e-4140-41e7-ac8a-2afe1dc9d5f5
          heroku_app_name: npmg-server
          heroku_email: titantechsteam@gmail.com
